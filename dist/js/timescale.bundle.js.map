{"version":3,"sources":["webpack:///./src/timescale.js"],"names":["timescale","prototype","moveToFront","this","each","parentNode","appendChild","width","window","innerWidth","root","x","init","divId","attr","time","append","height","scale","range","domain","partitionFunc","size","padding","then","result","id","d","parentId","records","sum","level","start","end","selectAll","data","descendants","join","x0","y0","x1","y1","color","style","on","goTo","text","ancestors","map","e","name","reverse","uniqueAgesSet","Set","node","uniqueAgesArray","Array","from","find","hash","enter","depth","now","textGroup","labelX","abr","charAt","labelAbbrX","remove","goToName","resize","rectWidth","rectX","abbrevWidth","getComputedTextLength","labelWidth","err","periodName","periodNode","searchTree","property","match","children","i","length","currentInterval","t","duration","ease","transition","select","parent","forEach","ancestor","parseInt"],"mappings":"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","file":"js/timescale.bundle.js","sourcesContent":["/* eslint-disable func-names */\n// 1. Fix drag\nimport { selection, select, selectAll } from 'd3-selection'; // event\n// import { drag } from 'd3-drag';\nimport { scaleLinear } from 'd3-scale';\nimport { transition } from 'd3-transition';\nimport { partition, stratify } from 'd3-hierarchy';\nimport { json } from 'd3-fetch';\nimport { easeLinear } from 'd3-ease';\n\nconst timescale = (function () {\n  // Via http://stackoverflow.com/questions/14167863/how-can-i-bring-a-circle-to-the-front-with-d3\n  // Necessary for highlighting time intervals properly\n  selection.prototype.moveToFront = function () {\n    return this.each(function () {\n      this.parentNode.appendChild(this);\n    });\n  };\n\n  // Via https://stackoverflow.com/questions/9133500/how-to-find-a-node-in-a-tree-with-javascript\n  function searchTree(node, property, match) {\n    if (property === 'name' || 'id' || 'start' || 'end' || '') {\n      if (node.data[property] === match) {\n        return node;\n      } if (node.children != null) {\n        let result = null;\n        for (let i = 0; result == null && i < node.children.length; i++) {\n          result = searchTree(node.children[i], property, match);\n        }\n        return result;\n      }\n      return null;\n    } else {\n      console.warn('Property can\\'t be used to search');\n    }\n  }\n\n  let width = window.innerWidth - 4;\n  const height = 150;\n\n  // Initialize data\n  let root;\n  let x;\n  // let dragStart;\n  // let transformStart;\n\n  return {\n\n    init: (divId) => {\n      /*       let newX = 0.01;\n      let transformStart;\n      let dragStart;\n\n      const dragFunc = drag()\n        .subject(function() {\n          // const t = select('.timescale g');\n          return {x: newX, y: 0};\n        })\n        .on('start', function() {\n          dragStart = event.pageX;\n          // console.log('timescale > g', select('.timescale').select('g'))\n          // console.log('attr transform', select('.timescale').select('g').attr('transform')) // Only show a scale transform no translate\n          transformStart = getTransformation(select('.timescale').select('g').attr('transform'));\n          // console.log({transformStart})\n          event.sourceEvent.stopPropagation();\n        })\n        .on('drag', function() {\n        \tconst currentDrag = event.pageX;\n\n         \tnewX = (dragStart - currentDrag);\n\n          select('.timescale').select('g')\n            .attr('transform', function() {\n              return `translate(${[ parseInt(transformStart[0] + -newX), 0 ]}) scale(${parseInt(select('.timescale').style('width'))/width})`;\n            });\n        }); */\n\n      // Add class timescale to whatever divId was supplied\n      select(`#${divId}`).attr('class', 'timescale');\n\n      // Create the SVG for the chart\n      const time = select(`#${divId}`).append('svg')\n        .attr('width', width)\n        .attr('height', height + 40)\n        .append('g');\n\n      // Move whole tick SVG group down 125px\n      const scale = time.append('g')\n        .attr('id', 'tickBar')\n        .attr('transform', `translate(0,${height - 5})`);\n\n      x = scaleLinear()\n        .range([5, width])\n        .domain([5, width]);\n\n      // Create a new partition layout\n      const partitionFunc = partition()\n        .size([width, height])\n        .padding(0);\n\n      // Load the time scale data\n      json('jsons/intervals.json').then((result) => {\n        root = stratify()\n          .id((d) => d.id)\n          .parentId((d) => d.parentId)(result.records); // ? add time for Holocene\n\n        // Only sum lowest level timespans\n        partition(root.sum((d) => ((d.level === 5) ? d.start - d.end : 0)));\n\n        partitionFunc(root);\n\n        const rectGroup = time.append('g')\n          .attr('id', 'rectGroup');\n\n        const cell = rectGroup\n          .selectAll('rect')\n          .data(root.descendants())\n          .join('rect')\n          .attr('x', (d) => d.x0)\n          .attr('y', (d) => d.y0)\n          .attr('width', (d) => (d.x1 - d.x0))\n          .attr('height', (d) => (d.y1 - d.y0))\n          .attr('fill', (d) => d.data.color)\n          .attr('id', (d) => `t${d.data.id}`)\n          .style('opacity', 0.83)\n          // .call(drag)\n          .on('click', (d) => timescale.goTo(d));\n\n        cell.append('title')\n          .text((d) => `${d.ancestors().map((e) => e.data.name).reverse().join(' > ')}`);\n\n        const uniqueAgesSet = new Set(root.descendants().map((node) => node.data.start));\n        const uniqueAgesArray = Array.from(uniqueAgesSet)\n          .map((start) => (root.descendants()).find((node) => node.data.start === start));\n\n        // Scale bar for the bottom of the graph\n        const scaleBar = scale.selectAll('rect')\n          .data(uniqueAgesArray);\n\n        const hash = scaleBar.enter().append('g')\n          .attr('class', (d) => `tickGroup s${d.depth}`)\n          .attr('transform', (d) => `translate(${d.x0}, 0)`);\n\n        hash.append('line')\n          .attr('x1', 0)\n          .attr('y1', 7.5)\n          .attr('x2', 0)\n          .attr('y2', (d) => 52 - d.depth * 8)\n          .style('stroke-width', (d) => '0.05em');\n\n        hash.append('text')\n          .attr('x', 0)\n          .attr('y', (d) => 60 - d.depth * 8)\n          .style('text-anchor', (d) => ((d.data.start !== 0.0117) ? 'middle' : 'end'))\n          .style('font-size', (d) => `${0.9 - 0.08 * d.depth}em`)\n          .attr('paint-order', 'stroke')\n          .attr('stroke-width', '1.5px')\n          .attr('stroke', '#fff')\n          .attr('stroke-linecap', 'butt')\n          .attr('stroke-linejoin', 'miter')\n          .text((d) => d.data.start);\n\n        // Create a tick for year 0\n        const now = scale.append('g')\n          .data([{ x0: width, y0: 0 }])\n          .attr('class', 'tickGroup s1 s2 s3 s4 s5')\n          .attr('transform', `translate(${width}, 0)`);\n\n        now.append('line')\n          .attr('x1', 0)\n          .attr('y1', 6)\n          .attr('x2', 0)\n          .attr('y2', 12)\n          .style('stroke-width', '0.05em');\n\n        now.append('text')\n          .attr('x', 4)\n          .attr('y', 25)\n          .attr('id', 'now')\n          .style('fill', 'white')\n          .style('text-anchor', 'end')\n          .style('font-size', '1.2em')\n          .style('fill', '#777')\n          .text('0');\n\n        const textGroup = time.append('g')\n          .attr('id', 'textGroup');\n\n        // Add the full labels\n        textGroup.append('g').attr('id', 'fullNames').selectAll('text')\n          .data(root.descendants())\n          .join('text')\n          .text((d) => d.data.name)\n          .attr('y', (d) => d.y0 + 15)\n          .attr('width', 40) // function() {return this.getComputedTextLength();})\n          .attr('height', (d) => d.y1 - d.y0)\n          .attr('class', (d) => `fullName level${d.depth}`)\n          .attr('id', (d) => `l${d.data.id}`)\n          .attr('x', (d) => timescale.labelX(d))\n          .on('click', (d) => timescale.goTo(d));\n\n        // Add the abbreviations\n        textGroup.append('g').attr('id', 'abbrevs')\n          .selectAll('text')\n          .data(root.descendants())\n          .join('text')\n          .text((d) => d.data.abr || d.data.name.charAt(0))\n          .attr('y', (d) => d.y0 + 15)\n          .attr('width', 30)\n          .attr('height', (d) => d.y1 - d.y0)\n          .attr('class', (d) => `abbr level${d.depth}`)\n          .attr('id', (d) => `a${d.data.id}`)\n          .attr('x', (d) => timescale.labelAbbrX(d))\n          .on('click', (d) => timescale.goTo(d));\n\n        // Position the labels for the first time\n        timescale.goTo(root);\n\n        // Remove the Geologic time abbreviation\n        select('.abbr.levelundefined').remove();\n\n        // Open to Phanerozoic\n        timescale.goToName('Phanerozoïcum');\n      }); // End PaleoDB json callback\n      // attach window resize listener to the window\n      select(window).on('resize', timescale.resize);\n    },\n\n    // Calculates x-position for label abbreviations\n    labelAbbrX(d) {\n      const rectWidth = x(d.x1) - x(d.x0);\n      const rectX = x(d.x0);\n\n      const abbrevWidth = select(`#a${d.data.id}`).node().getComputedTextLength();\n\n      if (rectWidth - 8 < abbrevWidth) {\n        select(`#a${d.data.id}`).style('display', 'none');\n      }\n\n      return rectX + (rectWidth - abbrevWidth) / 2;\n    },\n\n    labelX(d) {\n      const rectWidth = x(d.x1) - x(d.x0);\n      const rectX = x(d.x0);\n\n      let labelWidth;\n      try {\n        labelWidth = select(`#l${d.data.id}`).node().getComputedTextLength(); // this?\n      } catch(err) {\n        labelWidth = 25;\n      }\n\n      // Hide full names if they are too small for their rectangles\n      if (rectWidth - 8 < labelWidth) {\n        select(`#l${d.data.id}`).style('display', 'none');\n      } else {\n        select(`#a${d.data.id}`).style('display', 'none');\n      }\n\n      return rectX + (rectWidth - labelWidth) / 2;\n    },\n\n    goToName(periodName) {\n      const periodNode = searchTree(root, 'name', periodName);\n      timescale.goTo(periodNode);\n    },\n\n    // Zooms the graph to a given time interval\n    // Accepts a data point or a named interval\n    goTo(node) {\n      // Stores the currently focused time interval for state restoration purposes\n      timescale.currentInterval = node;\n\n      selectAll('.fullName, .abbr')\n        .style('display', 'block');\n\n      x = scaleLinear()\n        .range([5, width])\n        .domain([node.x0, node.x1]);\n\n      // Define transition for concurrent animation\n      const t = transition()\n        .duration(300)\n        .ease(easeLinear);\n\n      // Hide lowest two time labels\n      if (node.depth === 0 || node.depth === 1) {\n        selectAll('.s5, .s4').transition(t).style('display', 'none');\n      } else {\n        selectAll('.s5, .s4').transition(t).style('display', 'block');\n      }\n\n      // Transition the rectangles\n      selectAll('rect').transition(t)\n        .attr('x', (d) => x(d.x0))\n        .attr('width', (d) => x(d.x1) - x(d.x0));\n\n      // Transition tick groups\n      selectAll('.tickGroup').transition(t)\n        .attr('transform', function (d) {\n          select(this).selectAll('text')\n            .style('text-anchor', 'middle');\n\n          if (x(d.x0) === 5) {\n            select(this).select('text')\n              .style('text-anchor', 'start');\n          } else if (x(d.x0) === width) {\n            select(this).select('text')\n              .style('text-anchor', 'end');\n          }\n\n          return `translate(${x(d.x0)}, 0)`;\n        });\n\n      // Move the full names,\n      selectAll('.fullName').transition(t)\n        .attr('x', (d) => this.labelX(d))\n        .attr('height', (d) => d.y1 - d.y0);\n\n      // Move the abbreviations\n      selectAll('.abbr').transition(t)\n        .attr('x', (d) => this.labelAbbrX(d))\n        .attr('height', (d) => d.y1 - d.y0);\n\n      // Center whichever interval was clicked\n      select(`#l${node.data.id}`).transition(t)\n        .attr('x', width / 2);\n\n      // Position all the ancestors labels in the middle of the scale\n      if (node.parent) {\n        const ancestors = node.ancestors();\n        ancestors.forEach((ancestor) => {\n          select(`#l${ancestor.id}, #a${ancestor.id}`).transition(t)\n            .attr('x', width / 2);\n        });\n      }\n    },\n\n    resize() {\n      width = window.innerWidth - 4;\n\n      select('.timescale g')\n        .attr('transform', () => `scale(${parseInt(select('.timescale').style('width'))/961}`);\n\n      select('.timescale svg')\n        .style('width', () => select('.timescale').style('width'))\n        .style('height', () => `${parseInt(select('.timescale').style('width')) * 0.25}px`);\n    },\n  };\n}());\n\nexport default timescale;\n"],"sourceRoot":""}