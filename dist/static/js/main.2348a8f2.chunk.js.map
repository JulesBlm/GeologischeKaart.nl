{"version":3,"sources":["JSONs/geologielimburg.geojson","timescale.js","ControlPanel.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","timescale","width","height","root","x","selection","prototype","moveToFront","this","each","parentNode","appendChild","divId","dimensions","select","attr","time","append","scale","scaleLinear","range","domain","partitionFunc","partition","size","padding","json","then","result","stratify","id","d","parentId","records","sum","level","start","end","selectAll","data","descendants","join","x0","y0","x1","y1","color","style","call","drag","on","goTo","text","ancestors","map","name","reverse","uniqueAgesSet","Set","node","uniqueAgesArray","Array","from","find","hash","enter","depth","now","textGroup","labelX","abr","charAt","labelAbbrX","remove","goToName","window","resize","rectWidth","rectX","abbrevWidth","getComputedTextLength","labelWidth","err","periodName","periodNode","searchTree","property","match","children","i","length","currentInterval","t","transition","duration","ease","easeLinear","parent","forEach","ancestor","console","group","innerWidth","log","parseInt","groupEnd","defaultContainer","className","ControlPanel","viewState","setViewState","useState","index","setIndex","plaatsen","period","description","Container","useEffect","init","handleClick","increment","latitude","longitude","zoom","transitionDuration","dangerouslySetInnerHTML","__html","onClick","disabled","MAPBOX_ACCESS_TOKEN","process","App","deckRef","useRef","glState","setGlState","hoverState","setHoverState","pitch","bearing","minZoom","maxZoom","myViewState","setMyViewState","onViewStateChange","useCallback","innerHeight","addEventListener","removeEventListener","layers","GeoJsonLayer","geologicalmap","opacity","stroked","filled","getFillColor","properties","key","KRTCODE","getLineColor","pickable","onHover","y","object","hoveredObject","ref","controller","type","MapController","dragRotate","onWebGLInitialized","gl","mapboxApiAccessToken","reuseMaps","mapStyle","preventStyleDiffing","onLoad","e","target","geoMapLayer","MapboxLayer","deck","current","addLayer","position","right","top","zIndex","onViewportChange","viewport","left","info","renderTooltip","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2348a8f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/geologielimburg.0f7fe2f6.geojson\";","// 1. Fix drag\nimport { selection, select, selectAll } from \"d3-selection\"; //event\nimport { drag } from \"d3-drag\"\nimport { scaleLinear } from \"d3-scale\";\nimport { transition } from \"d3-transition\";\nimport { partition, stratify } from \"d3-hierarchy\";\nimport { json } from \"d3-fetch\";\nimport { easeLinear } from \"d3-ease\";\n\nconst timescale = (function() {\n  // Via http://stackoverflow.com/questions/14167863/how-can-i-bring-a-circle-to-the-front-with-d3\n  // Necessary for highlighting time intervals properly\n  selection.prototype.moveToFront = function() {\n    return this.each(function(){\n      this.parentNode.appendChild(this);\n    });\n  };\n\n  // Via https://stackoverflow.com/questions/9133500/how-to-find-a-node-in-a-tree-with-javascript\n  function searchTree(node, property, match){\n    if (property === \"nam\" || \"oid\" || \"mid\" || \"lag\" || \"\") {\n      if (node.data[property] === match){\n        return node;\n      } else if (node.children != null){\n          let result = null;\n          for (let i=0; result == null && i < node.children.length; i++) {\n            result = searchTree(node.children[i], property, match);\n          }\n          return result;\n      }\n      return null;\n    } else {\n      console.warn(\"Property can't be used to search\")\n    }\n  }\n\n  let width; // get width of parentcontainer!\n  let height;\n\n  // Initialize data\n  let root;\n  let x;\n  // let dragStart;\n  // let transformStart;\n\n  return {\n\n    \"init\": function(divId, dimensions) {\n      width = dimensions.width;\n      height = dimensions.height\n      // let newX = 0.01;\n      // let transformStart;\n      // let dragStart;\n\n      // const dragFunc = drag()\n      //   .subject(function() { \n      //     // const t = select(\".timescale g\");\n      //     return {x: newX, y: 0};\n      //   })\n      //   .on(\"start\", function() {\n      //     dragStart = event.pageX;\n      //     // console.log(\"timescale > g\", select(\".timescale\").select(\"g\"))\n      //     // console.log(\"attr transform\", select(\".timescale\").select(\"g\").attr(\"transform\")) // Only show a scale transform no translate\n      //     transformStart = getTransformation(select(\".timescale\").select(\"g\").attr(\"transform\"));\n      //     // console.log({transformStart})\n      //     event.sourceEvent.stopPropagation();\n      //   })\n      //   .on(\"drag\", function() {\n      //   \tconst currentDrag = event.pageX;\n\n      //    \tnewX = (dragStart - currentDrag);\n\n      //     select(\".timescale\").select(\"g\")\n      //       .attr(\"transform\", function() {\n      //         return `translate(${[ parseInt(transformStart[0] + -newX), 0 ]}) scale(${parseInt(select(\".timescale\").style(\"width\"))/width})`;\n      //       });\n      //   });\n      \n      // Add class timescale to whatever divId was supplied\n     select(`#${divId}`).attr(\"class\", \"timescale\");\n\n      // Create the SVG for the chart\n      const time = select(`#${divId}`).append(\"svg\")\n          .attr(\"width\", width)\n          .attr(\"height\", height + 40)\n          .append(\"g\");\n\n      // Move whole tick SVG group down 125px\n      const scale = time.append(\"g\")\n        .attr(\"id\", \"tickBar\")\n        .attr(\"transform\", `translate(0,${height-5})`);\n\n      x = scaleLinear()\n        .range([5, width])\n        .domain([5, width]); \n\n      // Create a new partition layout\n      const partitionFunc = partition()\n        .size([width, height])\n        .padding(0);\n\n      // Load the time scale data\n      json(\"intervals.json\").then(result => {\n        root = stratify()\n          .id(d => d.id)\n          .parentId(d => d.parentId )(result.records); //? add time for Holocene\n\n        // Only sum lowest level timespans\n        partition(root.sum(d => (d.level === 5) ? d.start - d.end : 0 ));\n\n        partitionFunc(root);\n        \n        const rectGroup = time.append(\"g\")\n          .attr(\"id\", \"rectGroup\");\n\n        const cell = rectGroup\n          .selectAll(\"rect\")\n          .data(root.descendants())\n          .join(\"rect\")\n            .attr(\"x\", d => d.x0)\n            .attr(\"y\", d => d.y0)\n            .attr(\"width\", d => (d.x1 - d.x0))\n            .attr(\"height\", d => (d.y1 - d.y0))\n            .attr(\"fill\", d => d.data.color)\n            .attr(\"id\", d => `t${d.data.id}`)\n            .style(\"opacity\", 0.83)\n            .call(drag)\n            .on(\"click\", d => timescale.goTo(d) );\n\n        cell.append(\"title\")\n          .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\" > \")}`);\n\n        const uniqueAgesSet = new Set(root.descendants().map(node => node.data.start))\n        const uniqueAgesArray = Array.from(uniqueAgesSet)\n          .map(start => (root.descendants()).find(node => node.data.start === start))\n\n        // Scale bar for the bottom of the graph\n        const scaleBar = scale.selectAll(\"rect\")\n          .data(uniqueAgesArray);\n\n        const hash = scaleBar.enter().append(\"g\")\n          .attr(\"class\", d => `tickGroup s${d.depth}`)\n          .attr(\"transform\", d => `translate(${d.x0}, 0)`); \n\n        hash.append(\"line\")\n          .attr(\"x1\", 0)\n          .attr(\"y1\", 7.5)\n          .attr(\"x2\", 0)\n          .attr(\"y2\", d => 52 - d.depth * 8)\n          .style(\"stroke-width\", d => \"0.05em\");\n\n        hash.append(\"text\")\n          .attr(\"x\", 0)\n          .attr(\"y\", d => 60 - d.depth * 8)\n          .style(\"text-anchor\", d => ((d.data.start !== 0.0117) ? \"middle\" : \"end\"))\n          .style(\"font-size\", d => `${0.9 - 0.08 * d.depth}em`)\n          .attr(\"paint-order\", \"stroke\")\n          .attr(\"stroke-width\", \"1.5px\")\n          .attr(\"stroke\", \"#fff\")\n          .attr(\"stroke-linecap\", \"butt\")\n          .attr(\"stroke-linejoin\", \"miter\")\n          .text(d => d.data.start );\n\n        // Create a tick for year 0\n        const now = scale.append(\"g\")\n          .data([{x0: width, y0: 0 }])\n          .attr(\"class\", \"tickGroup s1 s2 s3 s4 s5\")\n          .attr(\"transform\",`translate(${width}, 0)`);\n\n        now.append(\"line\")\n          .attr(\"x1\", 0)\n          .attr(\"y1\", 6)\n          .attr(\"x2\", 0)\n          .attr(\"y2\", 12)\n          .style(\"stroke-width\", \"0.05em\");\n\n        now.append(\"text\")\n          .attr(\"x\", 4)\n          .attr(\"y\", 25)\n          .attr(\"id\", \"now\")\n          .style(\"fill\", \"white\")\n          .style(\"text-anchor\", \"end\")\n          .style(\"font-size\", \"1.2em\")\n          .style(\"fill\", \"#777\")\n            .text(\"0\");\n\n        const textGroup = time.append(\"g\")\n          .attr(\"id\", \"textGroup\");\n\n        // Add the full labels\n        textGroup.append(\"g\").attr(\"id\", \"fullNames\").selectAll(\"text\")\n            .data(root.descendants())\n          .join(\"text\")\n            .text(d => d.data.name )\n            .attr(\"y\", d =>  d.y0 + 15)\n            .attr(\"width\", 40) //function() {return this.getComputedTextLength();})\n            .attr(\"height\", d =>  d.y1 - d.y0 )\n            .attr(\"class\", d => `fullName level${d.depth}`)\n            .attr(\"id\", d =>  `l${d.data.id}`)\n            .attr(\"x\", d => timescale.labelX(d))\n            .on(\"click\", d => timescale.goTo(d));\n\n        // Add the abbreviations\n        textGroup.append(\"g\").attr(\"id\", \"abbrevs\")\n          .selectAll(\"text\")\n            .data(root.descendants() )\n          .join(\"text\")\n            .text(d => d.data.abr || d.data.name.charAt(0))\n            .attr(\"y\", d => d.y0 + 15)\n            .attr(\"width\", 30)\n            .attr(\"height\", d => d.y1 - d.y0)\n            .attr(\"class\", d => `abbr level${d.depth}`)\n            .attr(\"id\", d => `a${d.data.id}`)\n            .attr(\"x\", d => timescale.labelAbbrX(d))\n            .on(\"click\", d => timescale.goTo(d) );\n\n        // Position the labels for the first time\n        timescale.goTo(root);\n\n        // Remove the Geologic time abbreviation\n        select(\".abbr.levelundefined\").remove();\n        \n        // Open to Phanerozoic \n        timescale.goToName(\"Phanerozoïcum\");\n      }); // End PaleoDB json callback\n      //attach window resize listener to the window\n      select(window).on(\"resize\", timescale.resize);\n    },\n\n    // Calculates x-position for label abbreviations\n    \"labelAbbrX\": function(d) {\n      const rectWidth = x(d.x1) - x(d.x0),\n            rectX = x(d.x0);\n\n      const abbrevWidth = select(`#a${d.data.id}`).node().getComputedTextLength();\n\n      if (rectWidth - 8 < abbrevWidth) {\n        select(`#a${d.data.id}`).style(\"display\", \"none\");\n      }\n\n      return rectX + (rectWidth - abbrevWidth) / 2;\n    },\n    \n    \"labelX\": function(d) {\n      const rectWidth = x(d.x1) - x(d.x0),\n            rectX = x(d.x0);\n\n      let labelWidth;\n      try {\n        labelWidth = select(`#l${d.data.id}`).node().getComputedTextLength(); //this?\n      } catch(err) {\n        labelWidth = 25;\n      }\n\n      // Hide full names if they are too small for their rectangles\n      if (rectWidth - 8 < labelWidth) {\n        select(`#l${d.data.id}`).style(\"display\", \"none\");\n      } else {\n        select(`#a${d.data.id}`).style(\"display\", \"none\");\n      }\n\n      return rectX + (rectWidth - labelWidth) / 2;\n    },\n    \n    \"goToName\": function(periodName) {\n      const periodNode = searchTree(root, \"name\", periodName)\n      timescale.goTo(periodNode)\n    },\n\n    // Zooms the graph to a given time interval\n    // Accepts a data point or a named interval\n    \"goTo\": function(d) {\n      // Stores the currently focused time interval for state restoration purposes\n      timescale.currentInterval = d;\n\n     selectAll(\".fullName, .abbr\")\n      .style(\"display\", \"block\");\n\n      x = scaleLinear()\n        .range([5, width])\n        .domain([d.x0, d.x1]); \n\n      // Define transition for concurrent animation\n      const t = transition()\n        .duration(300)\n        .ease(easeLinear);\n\n      // Hide lowest two time labels\n      if (d.depth === 0 || d.depth === 1) {\n        selectAll(`.s5, .s4`).transition(t).style(\"display\", \"none\");\n      } else {\n        selectAll(`.s5, .s4`).transition(t).style(\"display\", \"block\");\n      }\n\n      // Transition the rectangles\n      selectAll(\"rect\").transition(t)\n        .attr(\"x\", d => x(d.x0))\n        .attr(\"width\", d => x(d.x1) - x(d.x0))\n\n      // Transition tick groups\n      selectAll(\".tickGroup\").transition(t)\n        .attr(\"transform\", function(d) {\n          select(this).selectAll(\"text\")\n            .style(\"text-anchor\", \"middle\");\n          \n          if (x(d.x0) === 5) {\n            select(this).select(\"text\")\n              .style(\"text-anchor\", \"start\");\n          } else if (x(d.x0) === width) {\n            select(this).select(\"text\")\n              .style(\"text-anchor\", \"end\");\n          }\n\n          return `translate(${x(d.x0)}, 0)`\n        });\n        \n      // Move the full names,\n      selectAll(\".fullName\").transition(t)\n        .attr(\"x\", d => this.labelX(d))\n        .attr(\"height\", d => d.y1 - d.y0)\n\n      // Move the abbreviations\n      selectAll(\".abbr\").transition(t)\n        .attr(\"x\", d => this.labelAbbrX(d))\n        .attr(\"height\", d => d.y1 - d.y0)\n\n      // Center whichever interval was clicked\n      select(`#l${d.data.id}`).transition(t)\n        .attr(\"x\", width/2);\n\n      // Position all the ancestors labels in the middle of the scale\n      if (d.parent) {\n        const ancestors = d.ancestors()\n        ancestors.forEach(ancestor => {\n          select(`#l${ancestor.id}, #a${ancestor.id}`).transition(t)\n            .attr(\"x\", width/2);\n        })\n      }\n    },\n\n    \"resize\": () => {\n      console.group(\"Resizing ts!\")\n      if (window.innerWidth < 600) {\n        width = window.innerWidth - 4;\n        console.log(\"Small width\", width)\n      } else {\n        width = 0.3 * window.innerWidth - 4;\n        console.log(\"Widescreen\", width)\n      }\n      // select(\".timescale svg\")\n      //   .style(\"width\", width)\n\n      select(\".timescale g\")\n        .attr(\"transform\", () => \"scale(\" + parseInt(select(\".timescale\").style(\"width\"))/width + \")\" );\n\n      // select(\".timescale svg\")\n      //   .style(\"width\",() => select(\".timescale\").style(\"width\") )\n        // .style(\"height\", () => parseInt(select(\".timescale\").style(\"width\")) * 0.25 + \"px\" );\n\n      console.groupEnd();\n    },\n  }\n})();\n\nexport default timescale;","import React, {useState, useEffect} from 'react';\nimport timescale from './timescale';\n\nimport plaatsen from './JSONs/plaatsen.json';\n\nconst defaultContainer =  ({children}) => <div className=\"control-panel\">{children}</div>;\n\nexport default function ControlPanel({viewState, setViewState}) {\n    const [index, setIndex] = useState(0)\n    const {name, period, description} = plaatsen[index];\n    const Container = defaultContainer; //this.props.containerComponent || \n\n    useEffect(() => {\n        const dimensions = {\n            width: (window.innerWidth > 600) ? (0.3 * window.innerWidth - 4) : (window.innerWidth - 4),\n            height: 150\n        };\n        timescale.init(\"timescale\", dimensions);\n    }, [])\n\n    const handleClick = (increment) => {\n        setIndex(index + increment);\n        const { period, latitude, longitude, zoom } = plaatsen[index+increment]; // Ugly hack because index state is not updated immediately, but using timescale in useEffect won't work becaus timiscale is not initialized yet so root node is still unknown\n        setViewState({\n            ...viewState,\n            latitude,\n            longitude,\n            zoom,\n            transitionDuration: 1000\n        })\n        timescale.goToName(period); \n    }\n\n    return (\n        <Container>\n            <div className=\"text\">\n                <h2>{name}</h2>\n                <h3>{period}</h3>\n                <p dangerouslySetInnerHTML={ {__html:description} } />\n            </div>\n            <div id=\"button-bar\">\n                <button\n                    onClick={() => (index > 0) && handleClick(-1) }\n                    className=\"control-button\"\n                    disabled={index === 0}>\n                    Vorige\n                </button>\n                <button \n                    onClick={() => (index < plaatsen.length - 1) && handleClick(1)} \n                    className=\"control-button\"\n                    disabled={index === plaatsen.length - 1}>\n                    Volgende\n                </button>\n            </div>\n            <div id=\"timescale\"></div>\n        </Container>\n    )\n}\n","/*\nFix fly to\n1. Add correct lat lon's\n2. Add more text\n3. Bundle mapbox CSS\n4. Add meta description\n\nPotential\n0. Images and (temperature) charts\n1. Async descriptions\n2. Performance improvements\n3. Bring water to front\n*/\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport ReactMapGL, { NavigationControl} from 'react-map-gl'; //StaticMap\nimport DeckGL from '@deck.gl/react';\nimport { GeoJsonLayer } from  '@deck.gl/layers';\nimport { MapboxLayer } from \"@deck.gl/mapbox\";\nimport { MapController } from '@deck.gl/core';\n\nimport ControlPanel from './ControlPanel';\n\nimport geologicalmap from './JSONs/geologielimburg.geojson';\nimport key from './JSONs/key.json'\n\nconst MAPBOX_ACCESS_TOKEN = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN\n\nexport default function App() {\n  const deckRef = useRef(null);\n  const [glState, setGlState] = useState(null);\n  const [hoverState, setHoverState] = useState({});\n  const [myViewState, setMyViewState] = useState(\n    {\n      longitude: 5.850884,\n      latitude: 50.864828,\n      zoom: 10,\n      pitch: 15,\n      bearing: 0,\n      minZoom: 10,\n      maxZoom: 16,\n    }\n  );\n\n  useEffect(() => {\n    setMyViewState({ width: window.innerWidth, ...myViewState })\n  }, [])\n\n  const onHover = ({x, y, object}) => {\n    setHoverState({x, y, hoveredObject: object});\n  }\n\n  const onViewStateChange = ({viewState}) => {\n    setMyViewState({...viewState});\n  }\n\n  const onWebGLInitialized = (gl) => setGlState(gl);\n\n  const renderTooltip = () => {\n    const {x, y, hoveredObject} = hoverState;\n    return (\n      hoveredObject && (\n        <div className=\"tooltip\" style={{top: y, left: x, zIndex: 100}}>\n          <div>\n            <b>Formatie</b>\n          </div>\n          <div>\n            <div dangerouslySetInnerHTML={ {__html: key[hoveredObject.properties.KRTCODE].info} } />\n          </div>\n        </div>\n      )\n    );\n  }\n\n  useCallback(() => {\n    const resize = ({width, height}) => {\n      setMyViewState({\n        ...myViewState,\n        width: width || window.innerWidth,\n        height: height || window.innerHeight\n      });\n    }\n\n    window.addEventListener('resize', resize);\n    // resize();\n\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  }, [myViewState])\n\n  const layers =  [\n    new GeoJsonLayer({\n      id: 'geologicalmap',\n      data: geologicalmap,\n      opacity: 0.4,\n      stroked: true,\n      filled: true,\n      getFillColor: ({properties}) => key[properties.KRTCODE].color,\n      getLineColor: [255, 255, 255, 59],\n      pickable: true,\n      onHover: onHover\n    })\n  ];\n\n  return (\n    <>\n    <div className='mapcontainer'>\n    <DeckGL\n      width={(myViewState.width > 600) ? \"70%\" : \"100%\"}\n      height={(myViewState.width > 600) ? \"100%\" : \"50%\"}\n      ref={deckRef}\n      layers={layers} //renderLayers()\n      viewState={myViewState}\n      onViewStateChange={onViewStateChange}\n      controller={{type: MapController, dragRotate: false}}\n      onWebGLInitialized={onWebGLInitialized}\n      // controller={true}\n    >\n      {glState && (\n      <ReactMapGL\n        mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n        gl={glState}\n        reuseMaps\n        mapStyle={'mapbox://styles/wompo/cjq4cbqju9k5a2sqmz8lwcepk'}\n        preventStyleDiffing={true}\n        onLoad={e => {\n          const { target: map } = e;\n          const geoMapLayer = new MapboxLayer({\n            id: \"geologicalmap\",\n            deck: deckRef.current.deck,\n          })\n          map.addLayer(geoMapLayer, 'waterway-small');\n          // console.log(map.getStyle().layers)\n        }}\n      >\n        <div style={{position: 'absolute', right: 10, top: 5, zIndex: 100 }}>\n          <NavigationControl\n            onViewportChange={(viewport) => {\n              onViewStateChange({viewState: viewport})\n            }}/>\n        </div>\n      </ReactMapGL>\n    )}\n    </DeckGL>\n    </div>\n    {renderTooltip()}\n    <ControlPanel\n      viewState={myViewState}\n      setViewState={setMyViewState}\n    />\n  </>\n  )\n}\n\nexport function renderToDom(container) {\n  render(<App/>, container);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}